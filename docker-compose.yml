version: "3"

# All available services
services:

  # Computation
  jupyter:
    container_name: "ds1_jupyter"
    restart: "always"
    build: services/jupyter
    env_file:
      - ./config/jupyter.env
      - ./config/minio.env
      - ./config/shared_database.env
    volumes:
      - ./shared/notebooks/:/home/jovyan/work/notebooks
      - ./shared/dags/:/home/jovyan/work/dags
      - ./services/apistar/api/:/home/jovyan/work/api
    ports:
      - 8888:8888
    # entrypoint: sh -c 'start-notebook.sh --NotebookApp.token=$$JUPYTER_PASSWORD'
    entrypoint: sh -c 'jupyter lab --notebook-dir=/home/jovyan --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.allow_origin='*' --NotebookApp.base_url=${NB_PREFIX} --NotebookApp.token=$$JUPYTER_PASSWORD'


  # Visualization
#  superset:
#    container_name: "ds1_superset"
#    restart: "always"
#    image: tylerfowler/superset:0.24
#    depends_on:
#      - postgres
#    env_file:
#      - ./config/superset_container.env
#      - ./config/superset_database.env
#    ports:
#      - 8088:8088

  # DB Admin Console
  adminer:
    container_name: "ds1_adminer"
    image: adminer
    restart: always
    ports:
      - 8080:8080

  # Misc Storage
  postgres:
    container_name: "ds1_postgres"
    restart: "always"
    image: postgres
    env_file:
      - ./config/postgres.env
      # - ./config/superset_database.env
      # - ./config/airflow_database.env
      - ./config/shared_database.env
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
      - ./services/postgres/:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432

#  mongodb:
#    image: mongo:3.6.2
#    restart: always
#    ports:
#      - 27017:27017
#    env_file:
#      - ./config/mongo.env

  # Model Storage
  minio:
    container_name: "ds1_minio"
    restart: "always"
    image: minio/minio
    env_file:
      - ./config/minio.env
    volumes:
      - minio_volume:/data
    ports:
      - 9000:9000
    command: server /data

  # Admin Overview
  portainer:
    container_name: "ds1_portainer"
    restart: "always"
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_volume:/data
    ports:
      - 9090:9000
    command: -H unix:///var/run/docker.sock

# Volumes to persist data
volumes:
  postgres_volume:
  minio_volume:
  portainer_volume:

